
#1.define target
SET(EXECUTABLE_NAME cerberus)

#2.include
INCLUDE_DIRECTORIES(
./
)

IF(CMAKE_SYSTEM_NAME MATCHES "Darwin")
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Linux")
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Windows")
ELSE()
ENDIF()

#3.group source
FILE(GLOB FILES_SOURCE *.h *.hpp *.cpp)
SOURCE_GROUP("source" FILES ${FILES_SOURCE})

#4.create lib
#ADD_LIBRARY(${LIB_NAME} ${FILES_COMMON} ${FILES_NET} ${FILES_WORLD})

#5.lib
LINK_DIRECTORIES(
${PROJECT_PATH}/lib
/usr/lib
/usr/local/lib
)

IF(CMAKE_SYSTEM_NAME MATCHES "Darwin")
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Linux")
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Windows")
ELSE()
ENDIF()

#SET(LOCAL_LIBRARIES "${LIB_NAME}")

IF(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
	SET(LIBRARIES "pthread;dl")
ELSEIF(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
	IF(PROJECT_BUILD_TYPE MATCHES "Debug")
		SET(LIBRARIES "ws2_32")
		SET(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} /NODEFAULTLIB:libcmtd.lib /NODEFAULTLIB:libcmt.lib /NODEFAULTLIB:msvcrt.lib")
	ELSEIF(PROJECT_BUILD_TYPE MATCHES "Release")
		SET(LIBRARIES "ws2_32")
		SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} /NODEFAULTLIB:libcmt.lib")
	ENDIF()
ENDIF()

#6.build
ADD_EXECUTABLE(${EXECUTABLE_NAME} ${FILES_SOURCE})
SET_TARGET_PROPERTIES(${EXECUTABLE_NAME} PROPERTIES OUTPUT_NAME "${EXECUTABLE_NAME}")

#7.link lib
TARGET_LINK_LIBRARIES(${EXECUTABLE_NAME} ${LOCAL_LIBRARIES} ${LIBRARIES})

#8.install to dir or build to dir
IF(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
	SET_TARGET_PROPERTIES(${EXECUTABLE_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_PATH}/bin")
ELSEIF(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
	SET_TARGET_PROPERTIES(${EXECUTABLE_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG "${PROJECT_PATH}/bin")
	SET_TARGET_PROPERTIES(${EXECUTABLE_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE "${PROJECT_PATH}/bin")
ENDIF()

